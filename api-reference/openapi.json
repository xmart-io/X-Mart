{
  "openapi": "3.0.1",
  "info": {
    "title": "Api V3 documentación",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.artisn.desarrollo-redbrand.com/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/authentication/login": {
      "post": {
        "description": "This endpoint allows obtaining the access token for OAuth2 clients",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response upon logging in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The access token to be used in the API. DO NOT EXPOSE THIS TOKEN TO THE CLIENT!",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/v3/stores": {
      "get": {
        "description": "This endpoint allows listing the stores of a brand registered in the system",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Unique identifier of the brand",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/v3/channels-stores": {
      "post": {
        "description": "This endpoint allows registering stores and sales channels in the system. Important!: Each request sent is processed as a new configuration, so if a store, sales channel, warehouse, etc. is not sent, its entire configuration will be deleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stores": {
                    "type": "array",
                    "description": "List of stores to create",
                    "items": {
                      "$ref": "#/components/schemas/Store"
                    }
                  },
                  "channels": {
                    "type": "array",
                    "description": "List of sales channels to create",
                    "items": {
                      "$ref": "#/components/schemas/Channel"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response upon logging in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The access token to be used in the API. DO NOT EXPOSE THIS TOKEN TO THE CLIENT!",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/v3/stores/{storeId}": {
      "get": {
        "description": "This endpoint allows obtaining information about a store registered in the system",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Unique identifier of the brand",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Unique identifier of the store",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      },
      "put": {
        "description": "This endpoint changes the status of a store in the system",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Unique identifier of the brand",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Unique identifier of the store",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "State to which the store will be updated"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/v3/lists/sync-summary/lists": {
      "get": {
        "summary": "Get synchronization report",
        "description": "Allows obtaining a detailed report of: synchronization status, categories, products, modifiers, modifier options, errors and warnings of the last synchronization of a store",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "required": true,
            "description": "Unique identifier of the brand, this identifier is provided by Trade",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "description": "Unique identifier of the store",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "required": true,
            "description": "Sales channel identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "channelReferenceName",
            "in": "query",
            "required": false,
            "description": "This field is required if the channelId attribute is not unique. Unique reference name, this name will be used for the search and association of the standardized channel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listName",
            "in": "query",
            "required": false,
            "description": "Este campo es requerido si se utiliza en el atributo 'additionalInfo.relatedLists' en la sincronización de canales de venta. Nombre de la lista.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Synchronization report obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Synchronization status."
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error report found in the last synchronization"
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Report of notices found in the last synchronization"
                        },
                        "individualUpdates": {
                          "type": "boolean",
                          "description": "Determines if there were individual product or store updates"
                        },
                        "list": {
                          "type": "object",
                          "properties": {
                            "listId": {
                              "type": "string",
                              "description": "List identifier"
                            },
                            "listName": {
                              "type": "string",
                              "description": "List name"
                            },
                            "schedules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "type": "string"
                                  },
                                  "openTime": {
                                    "type": "string"
                                  },
                                  "closeTime": {
                                    "type": "string"
                                  }
                                }
                              },
                              "description": "Synchronized schedule of the list"
                            },
                            "categories": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "categoryId": {
                                    "type": "string"
                                  },
                                  "categoryName": {
                                    "type": "string"
                                  },
                                  "childCategories": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "categoryId": {
                                          "type": "string"
                                        },
                                        "categoryName": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "description": "List of subcategories synchronized and associated with the category"
                                  },
                                  "productListing": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "productId": {
                                          "type": "string"
                                        },
                                        "productName": {
                                          "type": "string"
                                        },
                                        "productModifiers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "modifierId": {
                                                "type": "string"
                                              },
                                              "modifierName": {
                                                "type": "string"
                                              },
                                              "modifierOptions": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "optionId": {
                                                      "type": "string"
                                                    },
                                                    "optionName": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "description": "List of options synchronized and associated with the modifier"
                                              }
                                            }
                                          },
                                          "description": "List of modifiers synchronized and associated with the product"
                                        }
                                      }
                                    },
                                    "description": "List of products synchronized and associated with the category"
                                  }
                                }
                              },
                              "description": "List of synchronized categories"
                            }
                          },
                          "description": "Complete report of synchronized data (categories, products, modifiers, options, etc.)"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/products": {
      "post": {
        "summary": "Add a product list",
        "description": "This endpoint allows you to add a list in the system. Important: Each submitted request is processed as a new configuration, so if a product, category, modifier, etc. is not sent all your configuration will be deleted.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "list": {
                    "type": "object",
                    "description": "General information of the list where the defined products will be added",
                    "properties": {
                      "listName": { "type": "string", "description": "Name that identifies the list" }
                    }
                  },
                  "modifierGroups": {
                    "type": "array",
                    "description": "Allows you to define a list of modifiers that will be used in the list",
                    "items": {
                      "type": "object",
                      "properties": {
                        "modifierId": { "type": "string" },
                        "modifier": { "type": "string" },
                        "minOptions": { "type": "integer" },
                        "maxOptions": { "type": "integer" },
                        "visible": { "type": "boolean" },
                        "position": { "type": "integer" },
                        "type": { "type": "string" },
                        "modifierOptions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "optionId": { "type": "string" },
                              "productId": { "type": "string" },
                              "default": { "type": "boolean" },
                              "position": { "type": "integer" },
                              "additionalInfo": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "Additional information using key-value pairs"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "products": {
                    "type": "array",
                    "description": "Allows you to define the products or items, as well as their organization in the list",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "name": { "type": "string" },
                        "type": { "type": "string", "enum": ["PRODUCT", "MODIFIER", "COMPLEMENT"] },
                        "description": { "type": "string" },
                        "standardTime": { "type": "boolean" },
                        "featured": { "type": "boolean" },
                        "modifierId": { "type": "string" },
                        "taxesInfo": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "vatRatePercentage": { "type": "integer" },
                              "name": { "type": "string" },
                              "type": { "type": "string" }
                            }
                          }
                        },
                        "priceInfo": {
                          "type": "object",
                          "properties": {
                            "price": { "type": "number" },
                            "pointPrice": { "type": "integer" },
                            "suggestedPrice": { "type": "number" },
                            "suggestedPointPrice": { "type": "integer" }
                          }
                        },
                        "schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": { "type": "string", "enum": ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY", "SPECIAL"] },
                              "startDate": { "type": "string", "format": "date" },
                              "endDate": { "type": "string", "format": "date" },
                              "startTime": { "type": "string", "format": "time" },
                              "endTime": { "type": "string", "format": "time" }
                            }
                          }
                        },
                        "upselling": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Set of unique product identifiers used in the upsell"
                        },
                        "crossSelling": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Set of unique product identifiers used in cross-selling"
                        },
                        "tags": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Allows you to assign tags to the product"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageCategoryId": { "type": "string" },
                              "fileUrl": { "type": "string" }
                            }
                          }
                        },
                        "productModifiers": {
                          "type": "array",
                          "description": "Allows you to associate modifiers to the product",
                          "items": {
                            "type": "object",
                            "properties": {
                              "modifierId": { "type": "string" },
                              "position": { "type": "integer" }
                            }
                          }
                        },
                        "additionalInfo": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "Allows you to define additional information using key-value pairs"
                        }
                      }
                    }
                  },
                  "categories": {
                    "type": "array",
                    "description": "Allows you to define product categories as well as their organization in the list",
                    "items": {
                      "type": "object",
                      "properties": {
                        "categoryId": { "type": "string" },
                        "categoryName": { "type": "string" },
                        "displayInList": { "type": "boolean" },
                        "featured": { "type": "boolean" },
                        "crossSellingCategory": { "type": "boolean" },
                        "position": { "type": "integer" },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageCategoryId": { "type": "string" },
                              "fileUrl": { "type": "string" }
                            }
                          }
                        },
                        "childCategories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "categoryId": { "type": "string" },
                              "categoryName": { "type": "string" }
                            }
                          }
                        },
                        "productListing": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "productId": { "type": "string" },
                              "position": { "type": "integer" }
                            }
                          }
                        },
                        "schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": { "type": "string" },
                              "startDate": { "type": "string" },
                              "endDate": { "type": "string" },
                              "startTime": { "type": "string" },
                              "endTime": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ecommerceChannelId": {
                    "type": "integer",
                    "description": "Unified sales channel identifier, refers to the standardized channel identifier"
                  },
                  "channelReferenceName": {
                    "type": "string",
                    "description": "Unique reference name, used for search and association of the standardized channel."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listId": { "type": "string" },
                    "name": { "type": "string" },
                    "active": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain-cliente/token": {
      "post": {
        "summary": "Get Token",
        "description": "This service is exposed by Trade so that the client can obtain the access token that will be used in other methods",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "integer",
                    "description": "Client ID"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Client secret"
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "Concession type",
                    "example": "client_credentials"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "grant_type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully obtained",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "The access token"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type token",
                      "example": "Bearer"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Token expiration time in seconds"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "example": "Client authentication failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain-cliente/webhook/new-order": {
      "post": {
        "summary": "New order webhook",
        "description": "This service will need to be implemented on the client side so that Trade can consume it. This will serve to notify the client every time a new order entered event occurs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "Unique order identifier"
                  },
                  "status": {
                    "type": "string",
                    "description": "Order Status"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique customer identifier"
                      },
                      "name": {
                        "type": "string",
                        "description": "Customer name"
                      },
                      "email": {
                        "type": "string",
                        "description": "Customer Email"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "Unique product identifier"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Product quantity"
                        },
                        "price": {
                          "type": "number",
                          "description": "Product price"
                        }
                      }
                    }
                  },
                  "total": {
                    "type": "number",
                    "description": "Order Total"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order successfully notified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "example": "The request body is invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/products/{vendorId}": {
      "put": {
        "summary": "Update product information",
        "description": "This endpoint allows you to update product information",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "required": true,
            "description": "Unique brand identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storeId": {
                    "type": "string",
                    "description": "Unique store identifier"
                  },
                  "productId": {
                    "type": "string",
                    "description": "Unique product identifier"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Product status"
                  },
                  "priceInfo": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number",
                        "description": "Allows you to define the final price of the product (this price will be displayed in the app or the website)"
                      },
                      "pointPrice": {
                        "type": "integer",
                        "description": "Allows the price in points",
                        "nullable": true
                      }
                    }
                  },
                  "scheduledActiveStatus": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Future date on which you want to activate the product"
                  },
                  "scheduledInactiveStatus": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Future date on which you want to inactivate the product"
                  }
                },
                "required": ["storeId", "productId", "active", "priceInfo"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product information successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/coupon/redeem": {
      "post": {
        "summary": "Redeem local promotion",
        "description": "Allows you to redeem a local coupon using a UID and promotion code",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "Identificador único del usuario",
                    "example": "KQAR50EkIGM33tIVbs5w5GIDthe2"
                  },
                  "code": {
                    "type": "string",
                    "description": "Código de promoción",
                    "example": "D72A1088-980C-4942-9BAB-45430D2D1007"
                  },
                  "external_id": {
                    "type": "string",
                    "description": "ID externo",
                    "example": "D72A1088-980C-4942-9BAB-45430D2D1007"
                  }
                },
                "required": [
                  "uid",
                  "code",
                  "external_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cupón redimido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Cupón redimido correctamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  },
                  "required": ["message", "status"]
                },
                "examples": {
                  "success": {
                    "summary": "Redención exitosa",
                    "value": {
                      "message": "Cupón redimido correctamente",
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensaje de error",
                      "example": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cupón no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensaje de error",
                      "example": "Cupón no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/login": {
      "post": {
        "summary": "Autenticación",
        "description": "Autenticación del usuario mediante login.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "Campo requerido"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Campo requerido"
                  },
                  "grant_type": {
                    "type": "string",
                    "enum": ["client_credentials"]
                  }
                },
                "required": ["client_id", "client_secret", "grant_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autenticación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/tracking": {
      "post": {
        "summary": "Pedidos - Tracking",
        "description": "Registra información de tracking para un pedido específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "ID del pedido",
                    "example": "0000001427-010701"
                  },
                  "status": {
                    "type": "string",
                    "description": "Estado del pedido",
                    "example": "PedidoRecibido"
                  },
                  "trackingInfo": {
                    "type": "object",
                    "description": "Información de tracking",
                    "properties": {
                      "trackurl": {
                        "type": "string",
                        "description": "URL del tracking",
                        "example": "https://kfc-co.tracker.dragontail.com/?UID=hE58xI"
                      },
                      "trackingNumber": {
                        "type": "string",
                        "description": "Número de tracking",
                        "example": "RAP-0100-trackNUmber"
                      },
                      "deliveryConfirmationCode": {
                        "type": "string",
                        "description": "Código de confirmación de entrega",
                        "example": "PZ051"
                      },
                      "shippingCoordinates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "type": "string",
                              "example": "-0.20234732693531"
                            },
                            "longitude": {
                              "type": "string",
                              "example": "-78.486171941476"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "order_id",
                  "status",
                  "trackingInfo"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información de tracking registrada correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Tracking registrado exitosamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  },
                  "required": ["message", "status"]
                },
                "examples": {
                  "success": {
                    "summary": "Registro exitoso",
                    "value": {
                      "message": "Tracking registrado exitosamente",
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos"
          }
        }
      }
    },
    "/api/order/status": {
      "post": {
        "summary": "Pedidos - cambio de estado",
        "description": "Autenticación oauth con client credentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "ID del pedido",
                    "example": "0000013353-092501"
                  },
                  "status": {
                    "type": "string",
                    "description": "Nuevo estado del pedido",
                    "example": "Anulada"
                  }
                },
                "required": ["order_id", "status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado del pedido cambiado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Estado del pedido cambiado exitosamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Descripción del error",
                      "example": "Datos inválidos"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/transfer": {
      "put": {
        "summary": "Pedidos - transferencia",
        "description": "Autenticación oauth con client credentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "string",
                    "description": "ID del pedido",
                    "example": "0000000246-010103"
                  },
                  "from_store": {
                    "type": "string",
                    "description": "Código de la tienda de origen",
                    "example": "K046"
                  },
                  "to_store": {
                    "type": "string",
                    "description": "Código de la tienda de destino",
                    "example": "K153"
                  },
                  "processed_by": {
                    "type": "string",
                    "description": "Nombre de quien procesa la transferencia",
                    "example": "Juanito P"
                  },
                  "transfer_reason": {
                    "type": "string",
                    "description": "Razón de la transferencia",
                    "example": "Pedido pickup prueba transferencia"
                  },
                  "shipping_address": {
                    "type": "string",
                    "description": "Dirección de envío (opcional)",
                    "nullable": true,
                    "example": ""
                  }
                },
                "required": ["order", "from_store", "to_store", "processed_by", "transfer_reason"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido transferido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Pedido transferido exitosamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Descripción del error",
                      "example": "Datos inválidos"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/dispatched": {
      "post": {
        "summary": "Pedidos pickup - dispatched",
        "description": "Autenticación oauth con client credentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "codigo_app": {
                    "type": "string",
                    "description": "Código de la aplicación",
                    "example": "0000007860-010106"
                  },
                  "id_transaccion": {
                    "type": "string",
                    "description": "ID de la transacción",
                    "example": "XH4TDASD7812LDTST"
                  }
                },
                "required": ["codigo_app", "id_transaccion"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido despachado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Pedido despachado exitosamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Descripción del error",
                      "example": "Datos inválidos"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/products/{update}": {
      "put": {
        "summary": "Actualizar producto",
        "description": "Este endpoint actualiza la información de un producto existente.",
        "operationId": "updateProduct",
        "requestBody": {
          "description": "Información actualizada del producto",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": { "type": "string", "example": "Coffee-product-id" },
                  "name": { "type": "string", "example": "Small Coffee" },
                  "type": { "type": "string", "example": "PRODUCT" },
                  "description": { "type": "string", "example": "The bestest Coffee" },
                  "standardTime": { "type": "boolean", "example": true },
                  "featured": { "type": "boolean", "example": true },
                  "schedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day": { "type": "string", "example": "MONDAY" },
                        "startDate": { "type": "string", "format": "date", "example": "2019-02-24" },
                        "endDate": { "type": "string", "format": "date", "example": "2019-02-25" },
                        "startTime": { "type": "string", "format": "time", "example": "08:00" },
                        "endTime": { "type": "string", "format": "time", "example": "12:00" }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": { "type": "string", "example": "to share" }
                  },
                  "upselling": {
                    "type": "array",
                    "items": { "type": "string", "example": "lg-coffee" }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "imageCategoryId": { "type": "string", "example": "product" },
                        "fileUrl": { "type": "string", "format": "uri", "example": "https://path/to/file.png" }
                      }
                    }
                  },
                  "taxesInfo": {
                    "type": "object",
                    "properties": {
                      "taxRate": { "type": "number", "example": 0 },
                      "vatRatePercentage": { "type": "number", "example": 0 }
                    }
                  },
                  "priceInfo": {
                    "type": "object",
                    "properties": {
                      "price": { "type": "number", "example": 4.99 },
                      "pointPrice": { "type": "number", "nullable": true, "example": null }
                    }
                  },
                  "categories": {
                    "type": "array",
                    "items": { "type": "string", "example": "Coffes-category-id" }
                  },
                  "additionalInfo": {
                    "type": "object",
                    "properties": {
                      "menu_level": { "type": "integer", "example": 0 }
                    }
                  }
                },
                "required": ["productId", "name", "type", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto actualizado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Producto actualizado exitosamente." },
                    "productId": { "type": "string", "example": "Coffee-product-id" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Datos inválidos." }
                  }
                }
              }
            }
          }
        }
      }
    },                        
    "/api/order/infoPayments": {
      "get": {
        "summary": "Pedidos - información de pagos",
        "description": "Autenticación oauth con client credentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Fecha de inicio para filtrar pagos",
            "example": "2022-02-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Fecha de fin para filtrar pagos",
            "example": "2022-02-16"
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "allowEmptyValue": true,
            "description": "País (opcional)",
            "example": "ecuador"
          },
          {
            "name": "account",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "allowEmptyValue": true,
            "description": "Cuenta (opcional)",
            "example": ""
          },
          {
            "name": "vendor_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "allowEmptyValue": true,
            "description": "ID del vendedor (opcional)",
            "example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "Información de pagos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensaje de éxito",
                      "example": "Información de pagos obtenida exitosamente"
                    },
                    "status": {
                      "type": "string",
                      "description": "Estado de la operación",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Descripción del error",
                      "example": "Datos inválidos"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/lists/{listId}": {
      "put": {
        "summary": "Registrar o editar una lista",
        "description": "Este endpoint permite registrar o editar una lista en el sistema. Importante: Cada request enviado se procesa como una nueva configuración, por lo que si un producto, categoría, modificador, etc. no es enviado toda su configuración será eliminada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "list": {
                    "type": "object",
                    "description": "Información general de la lista que se va a crear",
                    "properties": {
                      "ecommerceChannelId": {
                        "type": "integer",
                        "description": "Identificador del canal de venta unificado, hace referencia al identificador del canal estandarizado."
                      },
                      "channelReferenceName": {
                        "type": "string",
                        "description": "Nombre único de referencia, utilizado para la búsqueda y asociación del canal estandarizado."
                      },
                      "listId": {
                        "type": "string",
                        "description": "Identificador único de la lista. Ej: pickup-menu, daily-menu, ..."
                      },
                      "listName": {
                        "type": "string",
                        "description": "Nombre que identifique a la lista. Ej: 'menu app'"
                      },
                      "vendorId": {
                        "type": "string",
                        "description": "Identificador único de la marca, suministrado por Trade."
                      },
                      "storeId": {
                        "type": "string",
                        "description": "Identificador único de la tienda, se refiere al parámetro storeId de la creación de tiendas y canales de venta. El valor 'replicate_in_all' permite replicar la lista actual para todas las tiendas."
                      },
                      "channelId": {
                        "type": "string",
                        "description": "Identificador único del canal de venta, se refiere al parámetro channelId de la creación de tiendas y canales de venta."
                      },
                      "schedules": {
                        "type": "array",
                        "description": "Permite aplicar un horario a la lista.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "day": {
                              "type": "string"
                            },
                            "startDate": {
                              "type": "string"
                            },
                            "endDate": {
                              "type": "string"
                            },
                            "startTime": {
                              "type": "string"
                            },
                            "endTime": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "categories": {
                    "type": "array",
                    "description": "Permite definir las categorías de productos, así como su organización en la lista.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "categoryId": {
                          "type": "string"
                        },
                        "categoryName": {
                          "type": "string"
                        },
                        "displayInList": {
                          "type": "boolean"
                        },
                        "featured": {
                          "type": "boolean"
                        },
                        "crossSellingCategory": {
                          "type": "boolean"
                        },
                        "position": {
                          "type": "integer"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageCategoryId": {
                                "type": "string"
                              },
                              "fileUrl": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "childCategories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "categoryId": {
                                "type": "string"
                              },
                              "categoryName": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "productListing": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "productId": {
                                "type": "string"
                              },
                              "position": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "type": "string"
                              },
                              "startDate": {
                                "type": "string"
                              },
                              "endDate": {
                                "type": "string"
                              },
                              "startTime": {
                                "type": "string"
                              },
                              "endTime": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "products": {
                    "type": "array",
                    "description": "Permite definir los productos o items, así como su organización en la lista.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "standardTime": {
                          "type": "boolean"
                        },
                        "featured": {
                          "type": "boolean"
                        },
                        "priceInfo": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number"
                            },
                            "salePrice": {
                              "type": "number"
                            }
                          }
                        },
                        "productModifiers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "modifierId": {
                                "type": "string"
                              },
                              "position": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "type": "string"
                              },
                              "startDate": {
                                "type": "string"
                              },
                              "endDate": {
                                "type": "string"
                              },
                              "startTime": {
                                "type": "string"
                              },
                              "endTime": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageCategoryId": {
                                "type": "string"
                              },
                              "fileUrl": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "modifierGroups": {
                    "type": "array",
                    "description": "Permite definir un listado de modificadores que se utilizarán en la lista.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "modifierId": {
                          "type": "string"
                        },
                        "modifier": {
                          "type": "string"
                        },
                        "minOptions": {
                          "type": "integer"
                        },
                        "maxOptions": {
                          "type": "integer"
                        },
                        "visible": {
                          "type": "boolean"
                        },
                        "position": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        },
                        "modifierOptions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "optionId": {
                                "type": "string"
                              },
                              "productId": {
                                "type": "string"
                              },
                              "default": {
                                "type": "boolean"
                              },
                              "position": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "scheduledActivities": {
                    "type": "array",
                    "description": "Permite programar la activación e inactivación de productos en una fecha futura.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string"
                        },
                        "scheduledActiveStatus": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "scheduledInactiveStatus": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista registrada o editada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthBody": {
        "required": [
          "client_id",
          "client_secret",
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "description": "Identificador unico del cliente",
            "type": "string"
          },
          "client_secret": {
            "description": "Secreto unico del cliente",
            "type": "string"
          },
          "grant_type": {
            "description": "Tipo de acceso",
            "type": "string"
          }
        }
      },
      "Store": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Nueva tienda 805"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "storeId": {
            "type": "integer",
            "example": 805
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "vendorId": {
            "description": "Identificador único de la marca. *Este identificador es suministrado por Trade.",
            "type": "integer",
            "example": 16
          },
          "schedulesByChannel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchedulesByChannel"
            }
          },
          "storeCode": {
            "type": "string",
            "example": "T005"
          },
          "taxesInfo": {
            "$ref": "#/components/schemas/TaxesInfo"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "deliveryInfo": {
            "$ref": "#/components/schemas/DeliveryInfo"
          },
          "locationInfo": {
            "$ref": "#/components/schemas/LocationInfo"
          },
          "storeChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "0F049503-85CF-E511-80C6-000D3A3261F3"
            }
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "DELIVERY"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "SchedulesByChannel": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "example": "0F049503-85CF-E511-80C6-000D3A3261F3"
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            }
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "example": "FRIDAY"
          },
          "endTime": {
            "type": "string",
            "example": "22:30"
          },
          "startTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "TaxesInfo": {
        "type": "object",
        "properties": {
          "taxRate": {
            "type": "number",
            "example": 0
          },
          "vatRatePercentage": {
            "type": "number",
            "example": 12
          }
        }
      },
      "ContactInfo": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "23955400"
          },
          "address": {
            "type": "string",
            "example": "PICHINCHA / QUITO / INAQUITO / AV. AMERICA N37-288 Y VILLALENGUA"
          }
        }
      },
      "DeliveryInfo": {
        "type": "object",
        "properties": {
          "cookTime": {
            "type": "string",
            "example": "10"
          },
          "deliveryId": {
            "type": "integer",
            "example": 46356
          },
          "minimumOrder": {
            "type": "string",
            "example": "0.00"
          },
          "shippingCost": {
            "type": "number",
            "example": 1.99
          }
        }
      },
      "LocationInfo": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "QUITO"
          },
          "latitude": {
            "type": "string",
            "example": "-0.17250869436401206"
          },
          "longitude": {
            "type": "string",
            "example": "-78.49125266075134"
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "channel": {
            "type": "string",
            "example": "Llevar"
          },
          "vendorId": {
            "type": "integer",
            "example": 16
          },
          "channelId": {
            "type": "string",
            "example": "0E049503-85CF-E511-80C6-000D3A3261F3"
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/AdditionalInfo"
          },
          "channelReferenceName": {
            "type": "string",
            "example": "Llevar PICKUP"
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "mediaId": {
            "type": "string",
            "example": "E683B6FE-65A9-4D01-B07B-FA1A3C8BCA8D"
          },
          "mediaName": {
            "type": "string",
            "example": "PICKUP"
          },
          "relatedLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedList"
            }
          }
        }
      },
      "RelatedList": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "example": "42203FD3-0194-EA11-80EE-000D3A019254"
          },
          "listName": {
            "type": "string",
            "example": "PICKUP ECOMMERCE T"
          }
        }
      },
      "StoreResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Store"
          },
          {
            "type": "object",
            "properties": {
              "storeImage": {
                "description": "Imagen de la tienda",
                "type": "array"
              },
              "paymentMethodAvailability": {
                "description": "",
                "type": "string"
              },
              "paymentMethodInfo": {
                "description": "",
                "type": "string"
              }
            }
          }
        ]
      },
      "List": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "MENU DOMICILIO"
          },
          "active": {
            "type": "boolean",
            "example": "true | false"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "statusCode": {
            "description": "Codigo de error de autenticación.",
            "type": "string"
          },
          "message": {
            "description": "Mensaje de error.",
            "type": "string"
          }
        }
      },
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}